
uChronos.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000200  00000294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000200  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800106  00800106  0000029a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000029a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000780  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000669  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d3  00000000  00000000  00001119  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  000013ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000379  00000000  00000000  00001454  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000011d  00000000  00000000  000017cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000018ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	7f c0       	rjmp	.+254    	; 0x10e <__vector_7>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d2 e0       	ldi	r29, 0x02	; 2
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e0 e0       	ldi	r30, 0x00	; 0
  48:	f2 e0       	ldi	r31, 0x02	; 2
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a6 30       	cpi	r26, 0x06	; 6
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	a6 e0       	ldi	r26, 0x06	; 6
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	ac 30       	cpi	r26, 0x0C	; 12
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	02 d0       	rcall	.+4      	; 0x6c <main>
  68:	c9 c0       	rjmp	.+402    	; 0x1fc <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <main>:


int main(void)
{
	/* Initialise ports immediately (fixed in v0.4) */
	PORTC=0b00111111; /* Shut down displays...  */
  6c:	8f e3       	ldi	r24, 0x3F	; 63
  6e:	88 b9       	out	0x08, r24	; 8
	DDRC =0b00111111; /* ...before being output */
  70:	87 b9       	out	0x07, r24	; 7
	
	
	PORTD=0b00000000;
  72:	1b b8       	out	0x0b, r1	; 11
	DDRD =0b11111111;
  74:	8f ef       	ldi	r24, 0xFF	; 255
  76:	8a b9       	out	0x0a, r24	; 10
	
	//Default time
	t_yr=17;
  78:	81 e1       	ldi	r24, 0x11	; 17
  7a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <t_yr>
	t_mth=9;
  7e:	89 e0       	ldi	r24, 0x09	; 9
  80:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	t_d=29;
  84:	8d e1       	ldi	r24, 0x1D	; 29
  86:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <t_d>
	t_h=2;
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <t_h>
	t_min=27;
  90:	8b e1       	ldi	r24, 0x1B	; 27
  92:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <t_min>
	t_s=24;
  96:	88 e1       	ldi	r24, 0x18	; 24
  98:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <t_s>
	
	SMCR=SMCR|1<<SE;
  9c:	83 b7       	in	r24, 0x33	; 51
  9e:	81 60       	ori	r24, 0x01	; 1
  a0:	83 bf       	out	0x33, r24	; 51
	
	//Now, set up the 1s timer
	OCR2A=220;
  a2:	8c ed       	ldi	r24, 0xDC	; 220
  a4:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__EEPROM_REGION_LENGTH__+0x7f00b3>
	TIMSK2=TIMSK2|1<<OCIE2A;
  a8:	e0 e7       	ldi	r30, 0x70	; 112
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	82 60       	ori	r24, 0x02	; 2
  b0:	80 83       	st	Z, r24
	TCCR2A=TCCR2A|1<<WGM21;
  b2:	e0 eb       	ldi	r30, 0xB0	; 176
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	80 83       	st	Z, r24
	TCCR2B=TCCR2B|1<<CS22|1<<CS21|1<<CS20;
  bc:	e1 eb       	ldi	r30, 0xB1	; 177
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	87 60       	ori	r24, 0x07	; 7
  c4:	80 83       	st	Z, r24
	sei();
  c6:	78 94       	sei
	
    while (1) 
    {
		for(int c=0;c<6;c++)
		{
			PORTC=0b00111111&~(1<<c);
  c8:	61 e0       	ldi	r22, 0x01	; 1
  ca:	70 e0       	ldi	r23, 0x00	; 0
			PORTD=disp_mem[c];
			
			//PORTD=cntr&&0xff;
			for(uint16_t i=5*4;--i;);
			PORTD=0b00000000;
			PORTC=0b00111111;
  cc:	4f e3       	ldi	r20, 0x3F	; 63
  ce:	e0 e0       	ldi	r30, 0x00	; 0
  d0:	f1 e0       	ldi	r31, 0x01	; 1
	sei();
	
	
    while (1) 
    {
		for(int c=0;c<6;c++)
  d2:	20 e0       	ldi	r18, 0x00	; 0
  d4:	30 e0       	ldi	r19, 0x00	; 0
		{
			PORTC=0b00111111&~(1<<c);
  d6:	cb 01       	movw	r24, r22
  d8:	02 2e       	mov	r0, r18
  da:	02 c0       	rjmp	.+4      	; 0xe0 <main+0x74>
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	0a 94       	dec	r0
  e2:	e2 f7       	brpl	.-8      	; 0xdc <main+0x70>
  e4:	80 95       	com	r24
  e6:	8f 73       	andi	r24, 0x3F	; 63
  e8:	88 b9       	out	0x08, r24	; 8
			//PORTD=(cntr>>(8*(5-c)))&0xff;
			PORTD=disp_mem[c];
  ea:	81 91       	ld	r24, Z+
  ec:	8b b9       	out	0x0b, r24	; 11
			
			//PORTD=cntr&&0xff;
			for(uint16_t i=5*4;--i;);
  ee:	84 e1       	ldi	r24, 0x14	; 20
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x86>
			PORTD=0b00000000;
  f6:	1b b8       	out	0x0b, r1	; 11
			PORTC=0b00111111;
  f8:	48 b9       	out	0x08, r20	; 8
			for(uint16_t i=5*4*1;--i;);
  fa:	84 e1       	ldi	r24, 0x14	; 20
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x92>
	sei();
	
	
    while (1) 
    {
		for(int c=0;c<6;c++)
 102:	2f 5f       	subi	r18, 0xFF	; 255
 104:	3f 4f       	sbci	r19, 0xFF	; 255
 106:	26 30       	cpi	r18, 0x06	; 6
 108:	31 05       	cpc	r19, r1
 10a:	29 f7       	brne	.-54     	; 0xd6 <main+0x6a>
 10c:	e0 cf       	rjmp	.-64     	; 0xce <main+0x62>

0000010e <__vector_7>:
		/* Keep these two brackets together */



ISR(TIMER2_COMPA_vect)
{
 10e:	1f 92       	push	r1
 110:	0f 92       	push	r0
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	0f 92       	push	r0
 116:	11 24       	eor	r1, r1
 118:	2f 93       	push	r18
 11a:	3f 93       	push	r19
 11c:	4f 93       	push	r20
 11e:	5f 93       	push	r21
 120:	8f 93       	push	r24
 122:	9f 93       	push	r25
 124:	ef 93       	push	r30
 126:	ff 93       	push	r31
	if(++t_s==60)
 128:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <t_s>
 12c:	8f 5f       	subi	r24, 0xFF	; 255
 12e:	8c 33       	cpi	r24, 0x3C	; 60
 130:	19 f0       	breq	.+6      	; 0x138 <__vector_7+0x2a>
 132:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <t_s>
 136:	16 c0       	rjmp	.+44     	; 0x164 <__vector_7+0x56>
	{
		t_s=0;
 138:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <t_s>
		if(++t_min==60)
 13c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <t_min>
 140:	8f 5f       	subi	r24, 0xFF	; 255
 142:	8c 33       	cpi	r24, 0x3C	; 60
 144:	19 f0       	breq	.+6      	; 0x14c <__vector_7+0x3e>
 146:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <t_min>
 14a:	0c c0       	rjmp	.+24     	; 0x164 <__vector_7+0x56>
		{
			t_min=0;
 14c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <t_min>
			if(++t_h==24)
 150:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <t_h>
 154:	8f 5f       	subi	r24, 0xFF	; 255
 156:	88 31       	cpi	r24, 0x18	; 24
 158:	19 f0       	breq	.+6      	; 0x160 <__vector_7+0x52>
 15a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <t_h>
 15e:	02 c0       	rjmp	.+4      	; 0x164 <__vector_7+0x56>
			{
				t_h=0;
 160:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <t_h>
				
			}
		}
}
disp_mem[5]=(t_s%10)|(t_s/10)<<4;
 164:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <t_s>
 168:	e0 e0       	ldi	r30, 0x00	; 0
 16a:	f1 e0       	ldi	r31, 0x01	; 1
 16c:	8d ec       	ldi	r24, 0xCD	; 205
 16e:	28 9f       	mul	r18, r24
 170:	91 2d       	mov	r25, r1
 172:	11 24       	eor	r1, r1
 174:	96 95       	lsr	r25
 176:	96 95       	lsr	r25
 178:	96 95       	lsr	r25
 17a:	30 e1       	ldi	r19, 0x10	; 16
 17c:	93 9f       	mul	r25, r19
 17e:	a0 01       	movw	r20, r0
 180:	11 24       	eor	r1, r1
 182:	99 0f       	add	r25, r25
 184:	39 2f       	mov	r19, r25
 186:	33 0f       	add	r19, r19
 188:	33 0f       	add	r19, r19
 18a:	93 0f       	add	r25, r19
 18c:	29 1b       	sub	r18, r25
 18e:	24 2b       	or	r18, r20
 190:	25 83       	std	Z+5, r18	; 0x05
disp_mem[4]=(t_min%10)|(t_min/10)<<4;
 192:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <t_min>
 196:	28 9f       	mul	r18, r24
 198:	91 2d       	mov	r25, r1
 19a:	11 24       	eor	r1, r1
 19c:	96 95       	lsr	r25
 19e:	96 95       	lsr	r25
 1a0:	96 95       	lsr	r25
 1a2:	30 e1       	ldi	r19, 0x10	; 16
 1a4:	93 9f       	mul	r25, r19
 1a6:	a0 01       	movw	r20, r0
 1a8:	11 24       	eor	r1, r1
 1aa:	99 0f       	add	r25, r25
 1ac:	39 2f       	mov	r19, r25
 1ae:	33 0f       	add	r19, r19
 1b0:	33 0f       	add	r19, r19
 1b2:	93 0f       	add	r25, r19
 1b4:	29 1b       	sub	r18, r25
 1b6:	24 2b       	or	r18, r20
 1b8:	24 83       	std	Z+4, r18	; 0x04
disp_mem[3]=(t_h%10)|(t_h/10)<<4;
 1ba:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <t_h>
 1be:	98 9f       	mul	r25, r24
 1c0:	81 2d       	mov	r24, r1
 1c2:	11 24       	eor	r1, r1
 1c4:	86 95       	lsr	r24
 1c6:	86 95       	lsr	r24
 1c8:	86 95       	lsr	r24
 1ca:	40 e1       	ldi	r20, 0x10	; 16
 1cc:	84 9f       	mul	r24, r20
 1ce:	90 01       	movw	r18, r0
 1d0:	11 24       	eor	r1, r1
 1d2:	88 0f       	add	r24, r24
 1d4:	38 2f       	mov	r19, r24
 1d6:	33 0f       	add	r19, r19
 1d8:	33 0f       	add	r19, r19
 1da:	83 0f       	add	r24, r19
 1dc:	98 1b       	sub	r25, r24
 1de:	92 2b       	or	r25, r18
 1e0:	93 83       	std	Z+3, r25	; 0x03
 1e2:	ff 91       	pop	r31
 1e4:	ef 91       	pop	r30
 1e6:	9f 91       	pop	r25
 1e8:	8f 91       	pop	r24
 1ea:	5f 91       	pop	r21
 1ec:	4f 91       	pop	r20
 1ee:	3f 91       	pop	r19
 1f0:	2f 91       	pop	r18
 1f2:	0f 90       	pop	r0
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	0f 90       	pop	r0
 1f8:	1f 90       	pop	r1
 1fa:	18 95       	reti

000001fc <_exit>:
 1fc:	f8 94       	cli

000001fe <__stop_program>:
 1fe:	ff cf       	rjmp	.-2      	; 0x1fe <__stop_program>
